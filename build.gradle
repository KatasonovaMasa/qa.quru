plugins {
    id 'java-library'
    id 'java'
    id ('io.qameta.allure') version '2.11.2'
}

group 'quru.qa'
version '1.0-SNAPSHOT'

allure{
    report {
        version.set("2.19.0")
    }
    adapter { // отвечает за появление папочки build/allure-results
        aspectjWeaver.set(true) //обработка аннотации @Step
        frameworks {
            junit5 { //название фреймворка
                adapterVersion.set("2.19.0") //версия интеграции фреймворка и Allure
            }
        }
    }
}


repositories {
    mavenCentral()
    compileJava {
        options.encoding = 'UTF-8'
    }
    compileTestJava {
        options.encoding = 'UTF-8'
    }
}

compileJava{
    options.encoding='UTF-8'
}

compileTestJava{
    options.encoding='UTF-8'
}


dependencies {
    testImplementation (
            "org.junit.jupiter:junit-jupiter:5.9.2",
            "io.qameta.allure:allure-junit5:2.18.1",
            "org.junit.jupiter:junit-jupiter-api:5.6.2",
            'com.codeborne:selenide:6.12.3',
            "org.slf4j:slf4j-simple:2.0.6",
            "com.github.javafaker:javafaker:1.0.2",
            'com.codeborne:pdf-test:1.5.0',
            'com.codeborne:xls-test:1.4.3',
            'com.opencsv:opencsv:5.7.1',
            'com.fasterxml.jackson.core:jackson-core:2.14.2',
            'com.fasterxml.jackson.core:jackson-databind:2.14.2',
            'io.qameta.allure:allure-selenide:2.21.0'
     )
}

dependencies {
    implementation 'com.github.javafaker:javafaker:1.0.2'
    testImplementation 'org.testng:testng:7.1.0'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}



tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()
}
test {
    //  systemProperty "chromeoptions.prefs", "init.accept_languages=ru"
    useJUnitPlatform()
}

task master_demoqa_test(type: Test){
    useJUnitPlatform{
        includeTags("demoqa")//должно совпадать с названием @Tag в классе тестов
    }
task master_github_test(type: Test){
    useJUnitPlatform{
        includeTags("github")//должно совпадать с названием @Tag в классе тестов
    }
}
task master_habr_test(type: Test){
    useJUnitPlatform{
       includeTags("habr")//должно совпадать с названием @Tag в классе тестов
   }
}
task master_qa_quru_test(type: Test){
    useJUnitPlatform{
        includeTags("qa_quru")//должно совпадать с названием @Tag в классе тестов
    }
}
}
